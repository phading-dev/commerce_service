- kind: Enum
  name: BillingAccountState
  values:
    - name: HEALTHY
      value: 1
    - name: SUSPENDED
      value: 2
- kind: Message
  name: BillingAccountStateInfo
  fields:
    - name: version
      type: number
      index: 1
    - name: state
      type: BillingAccountState
      index: 2
    - name: updatedTimeMs
      type: number
      index: 3
- kind: Message
  name: BillingAccount
  fields:
    - name: accountId
      type: string
      index: 1
    - name: stripeCustomerId
      type: string
      index: 2
    - name: stateInfo
      type: BillingAccountStateInfo
      index: 3
    - name: paymentAfterMs
      type: number
      index: 4
- kind: Enum
  name: PaymentState
  values:
    - name: PROCESSING
      value: 1
    - name: CHARGING
      value: 2
    - name: PAID
      value: 3
    - name: FAILED
      value: 4
- kind: Message
  name: LineItem
  fields:
    - name: productType
      type: ProductType
      import: "@phading/price/price"
      index: 1
    - name: quantity # The number of units per price config.
      type: number
      index: 2
    - name: amount # Amount under the smallest unit of the currency. E.g. cents for USD.
      type: number
      index: 3
- kind: Message
  name: Billing
  fields:
    - name: accountId
      type: string
      index: 1
    - name: billingId
      type: string
      index: 2
    - name: createdTimeMs
      type: number
      index: 3
    - name: state
      type: PaymentState
      index: 4
    - name: month # ISO string
      type: string
      index: 5
    - name: currency
      type: string
      index: 6
    - name: totalAmount # Amount under the smallest unit of the currency. E.g. cents for USD.
      type: number
      index: 7
    - name: items
      type: LineItem
      isArray: true
      index: 8
    - name: stripeInvoiceId
      type: string
      index: 9
    - name: stripeInvoiceUrl
      type: string
      index: 10
- kind: Enum
  name: StripeConnectedAccountState
  values:
    - name: ONBOARDING
      value: 1
    - name: ONBOARDED
      value: 2
- kind: Message
  name: EarningsAccount
  fields:
    - name: accountId
      type: string
      index: 1
    - name: stripeConnectedAccountId
      type: string
      index: 2
    - name: stripeConnectedAccountState
      type: StripeConnectedAccountState
      index: 3
- kind: Enum
  name: PayoutState
  values:
    - name: PROCESSING
      value: 1
    - name: PAID
      value: 2
    - name: FAILED
      value: 3
- kind: Message
  name: Earnings
  fields:
    - name: accountId
      type: string
      index: 1
    - name: earningsId
      type: string
      index: 2
    - name: createdTimeMs
      type: number
      index: 3
    - name: state
      type: PayoutState
      index: 4
    - name: month # ISO string
      type: string
      index: 5
    - name: currency
      type: string
      index: 6
    - name: totalAmount # Amount under the smallest unit of the currency. E.g. cents for USD.
      type: number
      index: 7
    - name: items
      type: LineItem
      isArray: true
      index: 8
    - name: stripeTransferId
      type: string
      index: 9
- kind: SpannerDatabase
  name: CommerceDatabase
  tables:
    - kind: MessageTable
      name: BillingAccount
      storedInColumn: data
      columns:
        - accountId
      primaryKeys:
        - accountId
      insert: InsertBillingAccount
      delete: DeleteBillingAccount
      get: GetBillingAccount
      update: UpdateBillingAccount
    - kind: MessageTable
      name: Billing
      storedInColumn: data
      columns:
        - billingId
        - accountId
        - state
        - month
      primaryKeys:
        - billingId
      indexes:
        - name: BillingByMonth
          columns:
            - accountId
            - name: month
              desc: true
        - name: BillingByState
          columns:
            - accountId
            - state
      insert: InsertBilling
      delete: DeleteBilling
      get: GetBilling
      update: UpdateBilling
    - kind: MessageTable
      name: EarningsAccount
      storedInColumn: data
      columns:
        - accountId
      primaryKeys:
        - accountId
      insert: InsertEarningsAccount
      delete: DeleteEarningsAccount
      get: GetEarningsAccount
      update: UpdateEarningsAccount
    - kind: MessageTable
      name: Earnings
      storedInColumn: data
      columns:
        - earningsId
        - accountId
        - state
        - month
      primaryKeys:
        - earningsId
      indexes:
        - name: EarningsByMonth
          columns:
            - accountId
            - name: month
              desc: true
        - name: EarningsByState
          columns:
            - accountId
            - state
      insert: InsertEarnings
      delete: DeleteEarnings
      get: GetEarnings
      update: UpdateEarnings
    - kind: TaskTable
      name: StripeCustomerCreatingTask
      columns:
        - name: accountId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
      executionTimeIndex: StripeCustomerCreatingTaskByExecutionTime
      insert: InsertStripeCustomerCreatingTask
      delete: DeleteStripeCustomerCreatingTask
      get: GetStripeCustomerCreatingTask
      listPendingTasks: ListPendingStripeCustomerCreatingTasks
      getMetadata: GetStripeCustomerCreatingTaskMetadata
      updateMetadata: UpdateStripeCustomerCreatingTaskMetadata
    - kind: TaskTable
      name: PaymentTask
      columns:
        - name: billingId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - billingId
      executionTimeIndex: PaymentTaskByExecutionTime
      insert: InsertPaymentTask
      delete: DeletePaymentTask
      get: GetPaymentTask
      listPendingTasks: ListPendingPaymentTasks
      getMetadata: GetPaymentTaskMetadata
      updateMetadata: UpdatePaymentTaskMetadata
    - kind: TaskTable
      name: UpdatePaymentMethodNotifyingTask
      columns:
        - name: billingId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - billingId
      executionTimeIndex: UpdatePaymentMethodNotifyingTaskByExecutionTime
      insert: InsertUpdatePaymentMethodNotifyingTask
      delete: DeleteUpdatePaymentMethodNotifyingTask
      get: GetUpdatePaymentMethodNotifyingTask
      listPendingTasks: ListPendingUpdatePaymentMethodNotifyingTasks
      getMetadata: GetUpdatePaymentMethodNotifyingTaskMetadata
      updateMetadata: UpdateUpdatePaymentMethodNotifyingTaskMetadata
    - kind: TaskTable
      name: BillingAccountSuspendingDueToPastDueTask
      columns:
        - name: billingId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - billingId
      executionTimeIndex: BillingAccountSuspendingDueToPastDueTaskByExecutionTime
      insert: InsertBillingAccountSuspendingDueToPastDueTask
      delete: DeleteBillingAccountSuspendingDueToPastDueTask
      get: GetBillingAccountSuspendingDueToPastDueTask
      listPendingTasks: ListPendingBillingAccountSuspendingDueToPastDueTasks
      getMetadata: GetBillingAccountSuspendingDueToPastDueTaskMetadata
      updateMetadata: UpdateBillingAccountSuspendingDueToPastDueTaskMetadata
    - kind: TaskTable
      name: BillingAccountSuspensionNotifyingTask
      columns:
        - name: accountId
          type: string
        - name: version
          type: float64
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
        - version
      executionTimeIndex: BillingAccountSuspensionNotifyingTaskByExecutionTime
      insert: InsertBillingAccountSuspensionNotifyingTask
      delete: DeleteBillingAccountSuspensionNotifyingTask
      get: GetBillingAccountSuspensionNotifyingTask
      listPendingTasks: ListPendingBillingAccountSuspensionNotifyingTasks
      getMetadata: GetBillingAccountSuspensionNotifyingTaskMetadata
      updateMetadata: UpdateBillingAccountSuspensionNotifyingTaskMetadata
    - kind: TaskTable
      name: BillingAccountStateSyncingTask
      columns:
        - name: accountId
          type: string
        - name: version
          type: float64
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
        - version
      executionTimeIndex: BillingAccountStateSyncingTaskByExecutionTime
      insert: InsertBillingAccountStateSyncingTask
      delete: DeleteBillingAccountStateSyncingTask
      get: GetBillingAccountStateSyncingTask
      listPendingTasks: ListPendingBillingAccountStateSyncingTasks
      getMetadata: GetBillingAccountStateSyncingTaskMetadata
      updateMetadata: UpdateBillingAccountStateSyncingTaskMetadata
    - kind: TaskTable
      name: StripeConnectedAccountCreatingTask
      columns:
        - name: accountId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
      executionTimeIndex: StripeConnectedAccountCreatingTaskByExecutionTime
      insert: InsertStripeConnectedAccountCreatingTask
      delete: DeleteStripeConnectedAccountCreatingTask
      get: GetStripeConnectedAccountCreatingTask
      listPendingTasks: ListPendingStripeConnectedAccountCreatingTasks
      getMetadata: GetStripeConnectedAccountCreatingTaskMetadata
      updateMetadata: UpdateStripeConnectedAccountCreatingTaskMetadata
    - kind: TaskTable
      name: SetupStripeConnectedAccountNotifyingTask
      columns:
        - name: accountId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - accountId
      executionTimeIndex: SetupStripeConnectedAccountNotifyingTaskByExecutionTime
      insert: InsertSetupStripeConnectedAccountNotifyingTask
      delete: DeleteSetupStripeConnectedAccountNotifyingTask
      get: GetSetupStripeConnectedAccountNotifyingTask
      listPendingTasks: ListPendingSetupStripeConnectedAccountNotifyingTasks
      getMetadata: GetSetupStripeConnectedAccountNotifyingTaskMetadata
      updateMetadata: UpdateSetupStripeConnectedAccountNotifyingTaskMetadata
    - kind: TaskTable
      name: PayoutTask
      columns:
        - name: earningsId
          type: string
      retryCountColumn: retryCount
      executionTimeColumn: executionTimeMs
      createdTimeColumn: createdTimeMs
      primaryKeys:
        - earningsId
      executionTimeIndex: PayoutTaskByExecutionTime
      insert: InsertPayoutTask
      delete: DeletePayoutTask
      get: GetPayoutTask
      listPendingTasks: ListPendingPayoutTasks
      getMetadata: GetPayoutTaskMetadata
      updateMetadata: UpdatePayoutTaskMetadata
  selects:
    - name: GetBillingAccountFromBilling
      table:
        name: Billing
        as: b
      join:
        - type: INNER
          table:
            name: BillingAccount
            as: a
          on:
            op: =
            leftColumn:
              name: accountId
              table: b
            rightColumn: accountId
      where:
        op: =
        leftColumn: billingId
      getColumns:
        - name: data
          table: a
    - name: GetBillingByMonth
      table: Billing
      where:
        op: AND
        exps:
          - op: =
            leftColumn: accountId
          - op: =
            leftColumn: month
      getColumns:
        - data
    - name: ListBillings
      table: Billing
      where:
        op: AND
        exps:
          - op: =
            leftColumn: accountId
          - op: ">="
            leftColumn: month
          - op: "<="
            leftColumn: month
      orderBy:
        - column: month
          desc: true
      getColumns:
        - data
    - name: ListBillingsByState
      table: Billing
      where:
        op: AND
        exps:
          - op: =
            leftColumn: accountId
          - op: =
            leftColumn: state
      getColumns:
        - data
    - name: GetEarningsAccountFromEarnings
      table:
        name: Earnings
        as: e
      join:
        - type: INNER
          table:
            name: EarningsAccount
            as: a
          on:
            op: =
            leftColumn:
              name: accountId
              table: e
            rightColumn: accountId
      where:
        op: =
        leftColumn: earningsId
      getColumns:
        - name: data
          table: a
    - name: GetEarningsByMonth
      table: Earnings
      where:
        op: AND
        exps:
          - op: =
            leftColumn: accountId
          - op: =
            leftColumn: month
      getColumns:
        - data
    - name: ListEarnings
      table: Earnings
      where:
        op: AND
        exps:
          - op: =
            leftColumn: accountId
          - op: ">="
            leftColumn: month
          - op: "<="
            leftColumn: month
      orderBy:
        - column: month
          desc: true
      getColumns:
        - data
    - name: ListEarningsByState
      table: Earnings
      where:
        op: AND
        exps:
          - op: =
            leftColumn: accountId
          - op: =
            leftColumn: state
      getColumns:
        - data
  outputDdl: ./db/ddl
  outputSql: ./db/sql
